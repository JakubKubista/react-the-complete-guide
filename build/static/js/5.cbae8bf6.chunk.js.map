{"version":3,"sources":["components/burger-builder/order/order.scss","components/burger-builder/order/order.js","containers/orders/orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ingredient","className","classes","Ingredient","key","MESSAGES","price","currencyUsd","Number","parseFloat","toFixed","Orders","this","onOrdersFetch","token","userId","orders","loading","order","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,WAAa,6B,gKC8B9CC,EA1BD,SAAAC,GACZ,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAoBL,EAAYM,IAAI,SAAAC,GACxC,OAAO,0BACLC,UAAWC,IAAQC,WACnBC,IAAKJ,EAAWJ,MACbI,EAAWJ,KAHT,KAGiBI,EAAWH,OAH5B,OAOT,OACE,yBAAKI,UAAWC,IAAQX,OACxB,2BAAIc,IAASZ,YAAb,KAA4BK,GAC5B,2BAAIO,IAASC,MAAb,KAAqB,2BAAID,IAASE,YAAb,IAA2BC,OAAOC,WAAWjB,EAAMc,OAAOI,QAAQ,OChBrFC,E,4LAEFC,KAAKpB,MAAMqB,cAAcD,KAAKpB,MAAMsB,MAAOF,KAAKpB,MAAMuB,U,+BAItD,IAAIC,EAAS,kBAAC,IAAD,MAab,OAZKJ,KAAKpB,MAAMyB,UACdD,EACIJ,KAAKpB,MAAMwB,OAAOjB,IAAI,SAAAmB,GAAK,OACzB,kBAAC,EAAD,CACEd,IAAKc,EAAMC,GACX1B,YAAayB,EAAMzB,YACnBa,MAAOY,EAAMZ,WAMhBU,M,GAnBUI,aAsCNC,sBAfS,SAAAC,GACtB,MAAO,CACLN,OAAQM,EAAMJ,MAAMF,OACpBC,QAASK,EAAMJ,MAAMD,QACrBH,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,SAII,SAAAS,GACzB,MAAO,CACLX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,OAI3DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.cbae8bf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"order__Order__ugFlZ\",\"Ingredient\":\"order__Ingredient__3o7-M\"};","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { MESSAGES } from '../../../constants/labels';\nimport classes from './order.scss';\n\nconst Order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    })\n  }\n\n  const ingredientsOutput = ingredients.map(ingredient => {\n    return <span\n      className={classes.Ingredient}\n      key={ingredient.name}>\n        {ingredient.name} ({ingredient.amount})\n    </span>\n  })\n\n  return (\n    <div className={classes.Order}>\n    <p>{MESSAGES.ingredients}: {ingredientsOutput}</p>\n    <p>{MESSAGES.price}: <b>{MESSAGES.currencyUsd} {Number.parseFloat(props.price).toFixed(2)}</b></p>\n  </div>\n  )\n};\n\nexport default Order;","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-service';\nimport withErrorHandler from '../../hoc/errorHandler';\nimport * as actions from '../../store/actions/index';\n\nimport Spinner from '../../components/layout/spinner/spinner';\nimport Order from '../../components/burger-builder/order/order';\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onOrdersFetch(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = (\n          this.props.orders.map(order => (\n            <Order\n              key={order.id}\n              ingredients={order.ingredients}\n              price={order.price} />\n          )\n        )\n      )\n    }\n\n    return orders;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrdersFetch: (token, userId) => dispatch(actions.ordersFetch(token, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}