{"version":3,"sources":["components/layout/form/input/input.js","components/layout/form/input/input.scss","assets/styles/default-form.scss","components/burger-builder/checkout-summary/checkout-summary.scss","constants/containers/checkout.js","containers/checkout/contact-data/contact-data.js","components/burger-builder/checkout-summary/checkout-summary.js","containers/checkout/checkout.js"],"names":["Input","props","inputElement","validationError","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","className","ValidationError","MESSAGES","enterValidValue","elementType","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Label","label","module","exports","ORDER_FORM","name","type","placeholder","validation","required","valid","email","street","postalCode","minLength","maxLength","country","deliveryMethod","ContactData","state","orderForm","validity","inputChangedHandler","event","inputName","updatedForm","updateValidatedForm","form","inputValue","target","setState","isFormValid","submitHandler","preventDefault","customer","formElementIdentifier","order","ingredients","price","userId","onPurchaseOrder","token","formElementsArray","createArrayOfFormElements","this","onSubmit","formElement","id","config","btnType","disabled","BUTTONS","loading","DefaultForm","enterContactData","Component","connect","burgerBuilder","auth","dispatch","orderData","actions","withErrorHandler","axios","CheckoutSummary","enjoyYourMeal","BudgerContainer","CheckoutSummaryContent","click","cancel","continue","Checkout","checkoutCancelHandler","history","goBack","checkoutContinueHandler","replace","checkout","to","purchasedRedirect","purchased","path","match","component"],"mappings":"0IAAA,6CA+DeA,IA3DD,SAAAC,GACZ,IAAIC,EAAe,KACfC,EAAkB,KAChBC,EAAe,CAACC,IAAQC,cAO9B,OALIL,EAAMM,SAAWN,EAAMO,gBAAkBP,EAAMQ,UACjDL,EAAaM,KAAKL,IAAQM,SAC1BR,EAAkB,uBAAGS,UAAWP,IAAQQ,iBAAkBC,IAASC,kBAG9Dd,EAAMe,aACX,IAAM,QACJd,EAAe,yCACbU,UAAWR,EAAaa,KAAK,MACzBhB,EAAMiB,cAFG,CAGbC,MAAOlB,EAAMkB,MACbC,SAAUnB,EAAMoB,WAClB,MAEF,IAAM,WACJnB,EAAe,4CACbU,UAAWR,EAAaa,KAAK,MACzBhB,EAAMiB,cAFG,CAGbC,MAAOlB,EAAMkB,MACbC,SAAUnB,EAAMoB,WAClB,MAEF,IAAM,SACJnB,EAAe,4BACbU,UAAWR,EAAaa,KAAK,KAC7BE,MAAOlB,EAAMkB,MACbC,SAAUnB,EAAMoB,SACbpB,EAAMiB,cAAcI,QAAQC,IAAI,SAAAC,GAAM,OACrC,4BACEC,IAAKD,EAAOL,MACZA,MAAOK,EAAOL,OACbK,EAAOE,iBAIhB,MAEF,QACExB,EAAe,yCACbU,UAAWR,EAAaa,KAAK,MACzBhB,EAAMiB,cAFG,CAGbC,MAAOlB,EAAMkB,MACbC,SAAUnB,EAAMoB,WAGtB,OACE,yBAAKT,UAAWP,IAAQL,OACtB,2BAAOY,UAAWP,IAAQsB,OAAQ1B,EAAM2B,OACvC1B,EACAC,K,oBCzDP0B,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,wBAAwB,gBAAkB,kC,oBCA9KD,EAAOC,QAAU,CAAC,YAAc,qC,oBCAhCD,EAAOC,QAAU,CAAC,gBAAkB,2CAA2C,uBAAyB,oD,+ICD3FC,EAAa,CACxBC,KAAM,CACJhB,YAAa,QACbE,cAAe,CACbe,KAAM,OACNC,YAAa,QAEff,MAAO,GACPgB,WAAY,CACVC,UAAU,GAEZC,OAAO,EACP5B,SAAS,GAEX6B,MAAO,CACLtB,YAAa,QACbE,cAAe,CACbe,KAAM,QACNC,YAAa,UAEff,MAAO,GACPgB,WAAY,CACVC,UAAU,GAEZC,OAAO,EACP5B,SAAS,GAEX8B,OAAQ,CACNvB,YAAa,QACbE,cAAe,CACbe,KAAM,OACNC,YAAa,UAEff,MAAO,GACPgB,WAAY,CACVC,UAAU,GAEZC,OAAO,EACP5B,SAAS,GAEX+B,WAAY,CACVxB,YAAa,QACbE,cAAe,CACbe,KAAM,OACNC,YAAa,YAEff,MAAO,GACPgB,WAAY,CACVC,UAAU,EACVK,UAAW,EACXC,UAAW,EACXT,KAAM,UAERI,OAAO,EACP5B,SAAS,GAEXkC,QAAS,CACP3B,YAAa,QACbE,cAAe,CACbe,KAAM,OACNC,YAAa,WAEff,MAAO,GACPgB,WAAY,CACVC,UAAU,EACVK,UAAW,GAEbJ,OAAO,EACP5B,SAAS,GAEXmC,eAAgB,CACd5B,YAAa,SACbE,cAAe,CACbI,QAAS,CACP,CACEH,MAAO,UACPO,aAAc,WAEhB,CACEP,MAAO,WACPO,aAAc,cAIpBP,MAAO,UACPgB,WAAY,GACZE,OAAO,I,kDCrELQ,E,2MACJC,MAAQ,CACNC,UAAWhB,EACXiB,UAAU,G,EAGZC,oBAAsB,SAACC,EAAOC,GAC5B,IAAMC,EAAcC,YAAoB,CACtCC,KAAM,EAAKR,MAAMC,UACjBI,YACAI,WAAYL,EAAMM,OAAOrC,QAG3B,EAAKsC,SAAS,CACZV,UAAWK,EACXJ,SAAUU,YAAY,CAACJ,KAAMF,O,EAIjCO,cAAgB,SAACT,GACfA,EAAMU,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAKhB,MAAMC,UAC3Cc,EAASC,GAAyB,EAAKhB,MAAMC,UAAUe,GAAuB3C,MAEhF,IAAM4C,EAAQ,CACZC,YAAa,EAAK/D,MAAM+D,YACxBC,MAAO,EAAKhE,MAAMgE,MAClBJ,SAAUA,EACVK,OAAQ,EAAKjE,MAAMiE,QAGrB,EAAKjE,MAAMkE,gBAAgBJ,EAAO,EAAK9D,MAAMmE,Q,wEAGrC,IAAD,OACDC,EAAoBC,YAA0BC,KAAKzB,MAAMC,WAE3DO,EACF,0BAAMkB,SAAUD,KAAKZ,eAClBU,EAAkB9C,IAAI,SAAAkD,GAAW,OAChC,kBAAC,IAAD,CACEhD,IAAKgD,EAAYC,GACjB1D,YAAayD,EAAYE,OAAO3D,YAChCE,cAAeuD,EAAYE,OAAOzD,cAClCC,MAAOsD,EAAYE,OAAOxD,MAC1BZ,SAAUkE,EAAYE,OAAOtC,MAC7B7B,eAAgBiE,EAAYE,OAAOxC,WACnC1B,QAASgE,EAAYE,OAAOlE,QAC5BY,QAAS,SAAC6B,GAAD,OAAW,EAAKD,oBAAoBC,EAAOuB,EAAYC,SAEpE,6BACA,kBAAC,IAAD,CAAQE,QAAQ,UAAUC,UAAWN,KAAKzB,MAAME,UAAW8B,IAAQf,QAOvE,OAJIQ,KAAKtE,MAAM8E,UACbzB,EAAO,kBAAC,IAAD,OAIP,yBAAK1C,UAAWP,IAAQ2E,aACtB,4BAAKlE,IAASmE,kBACb3B,O,GA9DiB4B,aAoFXC,cAhBS,SAAArC,GACtB,MAAO,CACLkB,YAAalB,EAAMsC,cAAcpB,YACjCC,MAAOnB,EAAMsC,cAAcnB,MAC3Bc,QAASjC,EAAMiB,MAAMgB,QACrBX,MAAOtB,EAAMuC,KAAKjB,MAClBF,OAAQpB,EAAMuC,KAAKnB,SAII,SAAAoB,GACzB,MAAO,CACLnB,gBAAiB,SAACoB,EAAWnB,GAAZ,OAAsBkB,EAASE,IAAsBD,EAAWnB,OAItEe,CAA6CM,YAAiB5C,EAAa6C,M,0BC3E3EC,EAnBS,SAAA1F,GACtB,OACE,yBAAKW,UAAWP,IAAQsF,iBACtB,4BAAK7E,IAAS8E,eACZ,yBAAKhF,UAAWP,IAAQwF,iBACtB,kBAAC,IAAD,CAAQ7B,YAAa/D,EAAM+D,eAE7B,yBAAKpD,UAAWP,IAAQyF,wBACtB,kBAAC,IAAD,CACElB,QAAQ,SACRmB,MAAO9F,EAAM+F,QAASlB,IAAQkB,QAChC,kBAAC,IAAD,CACEpB,QAAQ,UACRmB,MAAO9F,EAAMgG,UAAWnB,IAAQmB,aCZtCC,E,2MACJC,sBAAwB,WACtB,EAAKlG,MAAMmG,QAAQC,U,EAGrBC,wBAA0B,WACxB,EAAKrG,MAAMmG,QAAQG,QAAQ,2B,wEAI3B,IAAIC,EAAW,kBAAC,IAAD,CAAUC,GAAG,MAE5B,GAAIlC,KAAKtE,MAAM+D,YAAa,CAC1B,IAAM0C,EAAoBnC,KAAKtE,MAAM0G,UAAY,kBAAC,IAAD,CAAUF,GAAG,MAAS,KAEvED,EACE,6BACGE,EACD,kBAAC,EAAD,CACE1C,YAAaO,KAAKtE,MAAM+D,YACxBgC,OAAQzB,KAAK4B,sBACbF,SAAU1B,KAAK+B,0BACjB,kBAAC,IAAD,CACEM,KAAMrC,KAAKtE,MAAM4G,MAAMD,KAAO,gBAC9BE,UAAWjE,KAKnB,OACE,6BACG2D,O,GA/BctB,aA4CRC,sBAPS,SAAArC,GACtB,MAAO,CACLkB,YAAalB,EAAMsC,cAAcpB,YACjC2C,UAAW7D,EAAMiB,MAAM4C,YAIZxB,CAAyBe","file":"static/js/3.7b42f4aa.chunk.js","sourcesContent":["import React from 'react';\nimport { MESSAGES } from '../../../../constants/labels';\nimport classes from './input.scss';\n\nconst Input = props => {\n  let inputElement = null;\n  let validationError = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n    validationError = <p className={classes.ValidationError}>{MESSAGES.enterValidValue}</p>;\n  }\n\n  switch(props.elementType) {\n    case ('input'):\n      inputElement = <input\n        className={inputClasses.join(' ')}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />;\n      break;\n\n    case ('textarea'):\n      inputElement = <textarea\n        className={inputClasses.join(' ')}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />;\n      break;\n\n    case ('select'):\n      inputElement = <select\n        className={inputClasses.join(' ')}\n        value={props.value}\n        onChange={props.changed} >\n          {props.elementConfig.options.map(option => (\n            <option\n              key={option.value}\n              value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      break;\n\n    default:\n      inputElement = <input\n        className={inputClasses.join(' ')}\n        {...props.elementConfig}\n        value={props.value}\n        onChange={props.changed} />;\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n      {validationError}\n    </div>\n  );\n};\n\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input__Input__3ksSp\",\"Label\":\"input__Label___nla4\",\"InputElement\":\"input__InputElement__1K9sV\",\"Invalid\":\"input__Invalid__1yusH\",\"ValidationError\":\"input__ValidationError__1gZpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DefaultForm\":\"default-form__DefaultForm__IkQ6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"checkout-summary__CheckoutSummary__3HUSO\",\"CheckoutSummaryContent\":\"checkout-summary__CheckoutSummaryContent__zTqlh\"};","export const ORDER_FORM = {\n  name: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'text',\n      placeholder: 'Name'\n    },\n    value: '',\n    validation: {\n      required: true\n    },\n    valid: false,\n    touched: false\n  },\n  email: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'email',\n      placeholder: 'E-mail'\n    },\n    value: '',\n    validation: {\n      required: true\n    },\n    valid: false,\n    touched: false\n  },\n  street: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'text',\n      placeholder: 'Street'\n    },\n    value: '',\n    validation: {\n      required: true\n    },\n    valid: false,\n    touched: false\n  },\n  postalCode: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'text',\n      placeholder: 'ZIP Code'\n    },\n    value: '',\n    validation: {\n      required: true,\n      minLength: 5,\n      maxLength: 5,\n      type: 'number'\n    },\n    valid: false,\n    touched: false\n  },\n  country: {\n    elementType: 'input',\n    elementConfig: {\n      type: 'text',\n      placeholder: 'Country'\n    },\n    value: '',\n    validation: {\n      required: true,\n      minLength: 3\n    },\n    valid: false,\n    touched: false\n  },\n  deliveryMethod: {\n    elementType: 'select',\n    elementConfig: {\n      options: [\n        {\n          value: 'fastest',\n          displayValue: 'Fastest'\n        },\n        {\n          value: 'cheapest',\n          displayValue: 'Cheapest'\n        }\n      ]\n    },\n    value: 'fastest',\n    validation: {},\n    valid: true\n  }\n}","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport axios from '../../../axios-service';\nimport withErrorHandler from '../../../hoc/errorHandler';\nimport * as actions from '../../../store/actions/index';\nimport { createArrayOfFormElements, updateValidatedForm, isFormValid } from '../../../utils/index';\nimport { ORDER_FORM } from '../../../constants/containers/checkout';\nimport { MESSAGES, BUTTONS } from '../../../constants/labels';\n\nimport Button from '../../../components/layout/button/button';\nimport Spinner from '../../../components/layout/spinner/spinner';\nimport Input from '../../../components/layout/form/input/input';\n\nimport classes from '../../../assets/styles/default-form.scss';\n\nclass ContactData extends Component {\n  state = {\n    orderForm: ORDER_FORM,\n    validity: false\n  }\n\n  inputChangedHandler = (event, inputName) => {\n    const updatedForm = updateValidatedForm({\n      form: this.state.orderForm,\n      inputName,\n      inputValue: event.target.value\n    });\n\n    this.setState({\n      orderForm: updatedForm,\n      validity: isFormValid({form: updatedForm})\n    })\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    const customer = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      customer[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      customer: customer,\n      userId: this.props.userId\n    }\n\n    this.props.onPurchaseOrder(order, this.props.token);\n  }\n\n  render() {\n    const formElementsArray = createArrayOfFormElements(this.state.orderForm);\n\n    let form = (\n      <form onSubmit={this.submitHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n        ))}\n        <br />\n        <Button btnType=\"Success\" disabled={!this.state.validity}>{BUTTONS.order}</Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n\n    return (\n      <div className={classes.DefaultForm}>\n        <h4>{MESSAGES.enterContactData}</h4>\n        {form}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.price,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onPurchaseOrder: (orderData, token) => dispatch(actions.purchaseOrder(orderData, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React from 'react';\n\nimport { MESSAGES, BUTTONS } from '../../../constants/labels';\nimport Button from '../../layout/button/button';\nimport Burger from '../burger/burger';\nimport classes from './checkout-summary.scss';\n\nconst CheckoutSummary = props => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>{MESSAGES.enjoyYourMeal}</h1>\n        <div className={classes.BudgerContainer}>\n          <Burger ingredients={props.ingredients} />\n        </div>\n        <div className={classes.CheckoutSummaryContent}>\n          <Button\n            btnType=\"Danger\"\n            click={props.cancel}>{BUTTONS.cancel}</Button>\n          <Button\n            btnType=\"Success\"\n            click={props.continue}>{BUTTONS.continue}</Button>\n        </div>\n    </div>\n  )\n}\n\nexport default CheckoutSummary;","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport ContactData from './contact-data/contact-data';\nimport CheckoutSummary from '../../components/burger-builder/checkout-summary/checkout-summary';\n\nclass Checkout extends Component {\n  checkoutCancelHandler = () => {\n    this.props.history.goBack();\n  }\n\n  checkoutContinueHandler = () => {\n    this.props.history.replace('/checkout/contact-data');\n  }\n\n  render() {\n    let checkout = <Redirect to=\"/\" />\n\n    if (this.props.ingredients) {\n      const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n\n      checkout = (\n        <div>\n          {purchasedRedirect}\n          <CheckoutSummary\n            ingredients={this.props.ingredients}\n            cancel={this.checkoutCancelHandler}\n            continue={this.checkoutContinueHandler} />\n          <Route\n            path={this.props.match.path + '/contact-data'}\n            component={ContactData} />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {checkout}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}